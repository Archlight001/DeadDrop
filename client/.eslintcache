[{"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/index.js":"1","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/reportWebVitals.js":"2","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Chat.jsx":"3","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/containers/App.js":"4","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/containers/Main.jsx":"5","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Homepage.jsx":"6","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/MainProvider.js":"7","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/SocketProvider.js":"8","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/utils/connect.js":"9","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Participants.jsx":"10","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Modal.jsx":"11","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/ChatProvider.js":"12"},{"size":511,"mtime":1608635177669,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607424344059,"results":"15","hashOfConfig":"14"},{"size":6168,"mtime":1615472457783,"results":"16","hashOfConfig":"14"},{"size":377,"mtime":1608800592993,"results":"17","hashOfConfig":"14"},{"size":580,"mtime":1610648595648,"results":"18","hashOfConfig":"14"},{"size":1454,"mtime":1610623140228,"results":"19","hashOfConfig":"14"},{"size":3589,"mtime":1610642208808,"results":"20","hashOfConfig":"14"},{"size":735,"mtime":1610648740053,"results":"21","hashOfConfig":"14"},{"size":337,"mtime":1609164212375,"results":"22","hashOfConfig":"14"},{"size":3574,"mtime":1610617768347,"results":"23","hashOfConfig":"14"},{"size":1731,"mtime":1610623187886,"results":"24","hashOfConfig":"14"},{"size":1017,"mtime":1610651601006,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"enc1c5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/index.js",[],["52","53"],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/reportWebVitals.js",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Chat.jsx",["54","55","56"],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/containers/App.js",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/containers/Main.jsx",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Homepage.jsx",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/MainProvider.js",["57"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCall } from \"../utils/connect\";\n\nconst MainContext = React.createContext();\n\nexport function useMain() {\n  return useContext(MainContext);\n}\n\nexport function MainProvider({ children }) {\n  let history = useHistory();\n\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(\"Data\")));\n\n  const [isAdmin, setAdmin] = useState(false);\n\n  async function createSession(Email) {\n    const Result = await apiCall(\"post\", \"/api/validate\", { Email });\n\n    if (Result.exists) {\n      alert(\"A Session has already been created with this mail\");\n    } else {\n      const SessionId = uuidv4();\n      const UserId = uuidv4();\n\n      var date = new Date();\n\n      var Data = JSON.parse(localStorage.getItem(\"Data\"));\n      if (localStorage.getItem(\"Data\") !== null) {\n        if (date.getTime() > Data.date) {\n          localStorage.removeItem(\"Data\");\n          date.setTime(date.getTime() + 1 * 24 * 60 * 60 * 1000);\n          localStorage.setItem(\n            \"Data\",\n            JSON.stringify({\n              SessionId,\n              UserId,\n              Email,\n              date: date.getTime(),\n              Codename: Result.Codename,\n            })\n          );\n        }\n      } else {\n        date.setTime(date.getTime() + 1 * 24 * 60 * 60 * 1000);\n        // date.setTime(date.getTime() +  5 * 1000);\n\n        localStorage.setItem(\n          \"Data\",\n          JSON.stringify({\n            SessionId,\n            UserId,\n            Email,\n            date: date.getTime(),\n            Codename: Result.Codename,\n          })\n        );\n      }\n\n      const createnewSession = await apiCall(\n        \"post\",\n        \"/api/createSession\",\n        JSON.parse(localStorage.getItem(\"Data\"))\n      );\n\n      if(createnewSession.status === \"success\"){\n        setData(JSON.parse(localStorage.getItem(\"Data\")));\n      }else{\n        localStorage.removeItem(\"Data\");\n        console.log(\"An error has occured\")\n      }\n\n    }\n  }\n\n  async function joinSession(SessionId, UserId) {\n    const Result = await apiCall(\"post\", \"/api/validate\", {\n      SessionId,\n      UserId,\n    });\n\n    if (!Result.exists && localStorage.getItem(\"Data\") !== null) {\n      localStorage.removeItem(\"Data\");\n      setData(null);\n    } else if (Result.exists) {\n      localStorage.setItem(\n        \"Data\",\n        JSON.stringify({\n          SessionId,\n          UserId,\n          date: Result.Date,\n          Codename: Result.Codename,\n        })\n      );\n      setData(JSON.parse(localStorage.getItem(\"Data\")));\n    }\n  }\n\n  useEffect(() => {\n    async function checkAdmin() {\n      let checkUser = await apiCall(\"post\", \"/api/isAdmin\", {\n        id: data.UserId,\n      });\n      setAdmin(checkUser.isAdmin);\n    }\n\n    async function deleteSession() {\n      let UserId = data.UserId;\n      let SessionID = data.SessionId;\n      await apiCall(\"post\", \"/api/deleteSession\", {\n        UserId,\n        SessionID,\n      });\n    }\n\n    if (data !== null) {\n      var date = new Date();\n\n      if (date.getTime() > data.date) {\n        deleteSession();\n        localStorage.removeItem(\"Data\");\n        setData(null);\n        history.push(\"/\");\n      } else {\n        checkAdmin();\n        history.push(\"/chat\");\n      }\n    }\n  }, [data]);\n\n  return (\n    <MainContext.Provider\n      value={{ createSession, joinSession, data, setData, isAdmin }}\n    >\n      {children}\n    </MainContext.Provider>\n  );\n}\n","/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/SocketProvider.js",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/utils/connect.js",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Participants.jsx",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/components/Modal.jsx",[],"/home/chris/Development/Projects/Ongoing/DeadDrop/client/src/contexts/ChatProvider.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":28},{"ruleId":"62","severity":1,"message":"66","line":1,"column":41,"nodeType":"64","messageId":"65","endLine":1,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":34,"column":6,"nodeType":"69","endLine":34,"endColumn":8,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":133,"column":6,"nodeType":"69","endLine":133,"endColumn":12,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [data]",{"range":"81","text":"82"},"Update the dependencies array to be: [data, history]",{"range":"83","text":"84"},[1134,1136],"[data]",[3415,3421],"[data, history]"]